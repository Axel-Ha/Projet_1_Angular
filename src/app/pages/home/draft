import { Component, OnInit } from '@angular/core';
import { Observable, of, pipe} from 'rxjs';
import { Olympic } from 'src/app/core/models/Olympic';
import { OlympicService } from 'src/app/core/services/olympic.service';
import { BrowserModule } from '@angular/platform-browser';
import { NgxChartsModule } from '@swimlane/ngx-charts';
import { Participations } from 'src/app/core/models/Participation';
import { map, tap} from 'rxjs/operators';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { single } from './data';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.scss'],
})
export class HomeComponent  {

  public olympics$: Observable<Olympic[]> = of([]);
  public olympic!: Olympic;
  public olympics!: Olympic[];
  public participations!: Participations[];
  single!: any[]

  public view: any = [700, 400];
  public colorScheme: any = {
    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']
  };

  // options
  gradient: boolean = true;
  showLegend: boolean = true;
  showLabels: boolean = true;
  isDoughnut: boolean = false;
  // legendPosition: string = 'below';


  constructor(private olympicService: OlympicService) {
    (Object.assign(this, {single}))}


    ngOnInit()  {
      this.olympicService.loadInitialData().subscribe(() => {
        this.olympicService.getOlympics().subscribe((olympics: Olympic[]) => {
          const data = olympics.map((olympic) => {
            const totalMedals = olympic.participations.reduce((acc, part) => acc + part.medalsCount, 0);
            return { name: olympic.country, value: totalMedals };
          });
          this.olympics$ = of(olympics);
        });
      });

        //   (olympics: Olympic[]) => {
      //     olympics.map((olympic: Olympic) => ({
      //       country: olympic.country,
      //       participations: this.totalMedalsCount()
      //     }))
      //     return olympics
      //   }),
      // tap(value => console.log(`mon observable aprÃ¨s map: ${value}`))
      }
      // ngOnInit(){
      //   this.olympicService
      //   .getOlympics()
      //   .pipe(
      //     map((olympics: Olympic[]) => {
      //       const data = olympics.map((olympic) => {
      //         const totalMedals = olympic.participations.reduce(
      //           (acc, part) => acc + part.medalsCount,
      //           0
      //         );
      //         return [{ name: olympic.country, value: totalMedals }];
      //       });
      //       this.olympics$ = of(data);
      //     })
      //   )
      //   .subscribe();
      // }

    // totalMedalsCount(olympics: Olympic[]): number {
    //   let totalMedals = 0;
    //   for (let i = 0; i < olympics.length; i++) {
    //     totalMedals += this.olympic.participations[i].medalsCount;
    //   }
    //   return totalMedals;
    // }

    // OlympicFiltered(arrayOlympic: Olympic[]): Olympic[] {
    //   arrayOlympic.map((olympic: Olympic) => ({
    //     country: olympic.country,
    //     participations: this.totalMedalsCount(arrayOlympic)
    //   }))
    //   return arrayOlympic
    // }

     // .pipe(
    //   map((olympics) => {
    //     const data = olympics.map((olympic) => {
    //       const totalMedals = olympic.participations.reduce(
    //         (acc, part) => acc + part.medalsCount,
    //         0
    //       );
    //       return { country: olympic.country, medals: totalMedals };
    //     });
    //     // this.olympics$ = of(data);
    //   }),
    //   // tap((value) => this.olympics$.next(value)),
    // )
    // .subscribe();

    totalMedalsCount(olympic: Olympic): number {
      let totalMedals = 0
      for(let i = 0; i < this.olympic.participations.length; i++) {
        totalMedals += this.olympic.participations[i].medalsCount;
      }
      return totalMedals;
    }

    // filterOlympic() {
    //   this.olympics.map((olympic: Olympic) => ({
    //     country: olympic.country,
    //     participations: this.totalMedalsCount()
    //   }))
    //   return this.olympics;
    // }


    // public data: Observable<Olympic[]> =this.olympics$;

    onActivate(data: any): void {
      console.log('Activate', JSON.parse(JSON.stringify(data)));
      console.log(`data activate : ${data}`)
    }

    onDeactivate(data: any): void {
      console.log('Deactivate', JSON.parse(JSON.stringify(data)));
      console.log(`data ondeactivate : ${data}`)
    }

    onSelect(data: any): void {
      console.log('Item clicked', JSON.parse(JSON.stringify(data)));
      console.log(`data onselect : ${data}`)
    }
  }

  // getOlympics(): Observable<Olympic[]> {
  //   return this.olympics$.asObservable();
  // }

  // getOlympics(): Observable<Olympic[]> {
  //   return this.olympics$.asObservable().pipe(
  //     tap((data) => console.log('Retrieved data:', data)),
  //     // shareReplay(1),
  //     map((data) => {
  //       return data.map((olympicData) => {
  //         const medalsCount = olympicData.participations.reduce((acc, curr) => acc + curr.medalsCount, 0);
  //         return {
  //           country: olympicData.country,
  //           medalsCount: medalsCount,
  //         };
  //       });
  //     })
  //         // olympics.push(olympic);

  //       // return olympics;
  //     )
  // }





  // ngOnInit() {
  //   this.olympicService.getOlympics().subscribe(
  //     (value) => this.olympics$.next(value),
  //     (error) => console.error(error)
  //   );
  // }

  // ngOnInit(){
  //   this.olympicService.getOlympics()
  //   .subscribe(
  //     (value) => console.log(value),
  //   )
  // }
  // ngOnInit() {
  //   this.olympicService.getOlympics().subscribe((olympics: Olympic[]) => {
  //     this.olympics$ = of(olympics);
  //   });
  // }
